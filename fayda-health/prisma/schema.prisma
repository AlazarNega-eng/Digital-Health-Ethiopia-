// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User model for Auth.js, linked to our Patient model
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  // Custom link to our Patient model
  patient       Patient?
}

// Custom Patient Model
model Patient {
  id          String   @id @default(cuid())
  faydaId     String   @unique
  firstName   String
  lastName    String
  dateOfBirth DateTime
  bloodType   String?
  // Link back to the User model
  user        User     @relation(fields: [userId], references: [id])
  userId      String   @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  records     MedicalRecord[]
}

model MedicalRecord {
  id               String   @id @default(cuid())
  patient          Patient  @relation(fields: [patientId], references: [id])
  patientId        String
  recordType       String
  title            String
  practitionerName String
  details          String?
  isLocked         Boolean  @default(false)
  createdAt        DateTime @default(now())
}


// --- Auth.js Models ---
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime
  @@unique([identifier, token])
}